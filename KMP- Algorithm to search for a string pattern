//you need to create two functions one for LPS computation and other for Actual KMP algorithm 
private:
    void computelps(string pat, vector<int>& lps)
    {
        int length= 0;
        lps[0]=0;
        int i=1;
        while(i<pat.size())
        {
            if(pat[i]==pat[length])
            {
                length++;
                lps[i]=length;
                i++;
            }
            else
            {
                if(length != 0)
                {
                    length=lps[length-1];
                }
                else
                {
                    lps[i]=0;
                    i++;
                }
            }
        }
    }
  public:
    vector<int> search(string& pat, string& txt) {
        // code here
        int m= pat.size();
        int n= txt.size();
        vector<int> lps(m);
        computelps(pat,lps);
        vector<int> ans;
        int i=0;
        int j=0;
        
        while(i<n)
        {
            if(pat[j]== txt[i])
            {
                i++;
                j++;
            }
            if(j==m)
            {
                ans.push_back(i-j);
                j= lps[j-1];
            }
            else if(i<n && pat[j] != txt[i])
            {
                if(j !=0)
                {
                    j= lps[j-1];
                }
                else{
                    i++;
                }
            }
        }
        return ans;
    }
